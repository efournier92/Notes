#!/bin/zsh

#----------------
# Name          : work_wsl_ubuntu
# Description   : Shell-environment configuration for Work build on Windows (WSL) system
# Author        : E Fournier
# Dependencies  : zsh
#----------------

## File system

### User home directory

export UHOME="/mnt/c/Users/efournier"

### Data directory

export DATA="/mnt/d"

### Bnk directory

export BNK="$DATA/bnk"

### Start directory

export START="$BNK/snc"

### Hosts file

export HOSTS="/mnt/c/Windows/System32/drivers/etc/hosts"

## Tools

### Snc

#### Enable unison

export AUTO_SNC_ENABLED=true

### Clipboard Server

#### Set localhost for clipboard support

export DISPLAY=localhost:0.0

## Sources

### Snc aliases

source "$ZTOOLS/snc"

### Tools aliases

source "$ZTOOLS/tools"

### Windows aliases

source "$ZTOOLS/windows"

## Agile

### Create a new agile story directory and file

alias story="$ZSCRIPTS/development/create_agile_story"

## Utilities

alias start="cmd.exe /C start"
#alias vvm="bash $ZSCRIPTS/vvm.bash $SNC"

## Programs

alias qdir="start \"$HDOCS\\Q-Dir_State.qdr\""
alias screens="explore \"%USERPROFILE%\\snc\\Pictures\\Screenshots\""
alias nplus="/mnt/c/Program\ Files\ \(x86\)/Notepad++/notepad++.exe"

## System

### Mount

export TFS="/mnt/tfs"
alias m_tfs="sudo mount -t drvfs '\\\\tfs\\TeamCityBuilds' $TFS"
alias um_tfs="sudo umount $TFS"

### System Edit

alias hostedit="nplus 'C:\Windows\System32\drivers\etc\hosts'"

### System Cleanup

alias tempclean="rm -rf $HOME/AppData/Local/Temp/*"

### Edit Files

#### Spectrum Paths

alias spectrumpaths="vim $SNC/Work/SpectrumPaths.md"

#### Blue Jeans Rooms

alias blu="vim $SWORK/BlueJeansRooms.md"

### Logs

#### Logs root

export LOGS="/e/Logs-Raw/"
alias logs="cd $LOGS"

#### Exceptions

export EXCEPTIONS="$LOGS/Exceptions"
alias exceptions="cd $EXCEPTIONS"

## GUI Launchers

### Returns the directory to explore

get_directory_or_default() {
  [[ -z "$1" ]] \
    && local explore_path="." \
    || local explore_path="$1"
  echo "$explore_path"
}

### Opens an application in Windows from WSL

open_app() {
  local app_location="$1"
  [[ -z "$1" ]] \
    && "$app_location" \
    || "$app_location" "`wslpath -w $1`"
}

### Explore

explore() {
  local explore_path=`get_directory_or_default $1`
  "/mnt/c/Windows/explorer.exe" "`wslpath -w $explore_path`"
}

### Spreadsheet

spreadsheet() { 
  local app_location="/mnt/c/Program Files (x86)/Microsoft Office/root/Office16/EXCEL.EXE"
  [[ -z "$1" ]] \
    && "$app_location" \
    || "$app_location" "`wslpath -w $1`"
}

### Word Processing

word() { 
  local app_location="/mnt/c/Program Files (x86)/Microsoft Office/root/Office16/WINWORD.EXE"
  [[ -z "$1" ]] \
    && "$app_location" \
    || "$app_location" "`wslpath -w $1`"
}

### Presentation

presentation() { 
  local app_location="/mnt/c/Program Files (x86)/Microsoft Office/root/Office16/POWERPNT.EXE"
  [[ -z "$1" ]] \
    && "$app_location" \
    || "$app_location" "`wslpath -w $1`"
}

### Markdown

markdown() { 
  local app_location="/mnt/c/Users/efournier/AppData/Local/Google/Chrome SxS/Application/chrome.exe"

  [[ -z "$1" ]] \
    && echo "ERROR: Must supply path" \
    || "$app_location" "`wslpath -w $1`"
}

### PDF

pdf() { 
  local app_location="/mnt/c/Program Files (x86)/Adobe/Acrobat Reader DC/Reader/AcroRd32.exe"

  [[ -z "$1" ]] \
    && echo "ERROR: Must a supply path as an argument" \
    || "$app_location" "`wslpath -w $1`"
}

