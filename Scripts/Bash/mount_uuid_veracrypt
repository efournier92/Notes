#!/bin/bash

#----------------
# Name          : mount_uuid_verarypt
# Description   : Mounts drive with veracrypt based on arguments
# Author        : E Fournier
# Dependencies  : veracrypt
# Example Usage : ./mount_uuid_veracrypt $drive_uuid $mount_location $slot_num
#----------------

has_empty_args() {
  local drive_uuid="$1"
  local mount_location="$2"
  local slot_num="$3"

  [[ -z "$drive_uuid" || -z "$mount_location" || -z "$slot_num" ]] \
    && echo "true" \
    || echo "false"
}

is_mount_location_empty() {
  local mount_location="$1"

  [[ $(ls -A "$mount_location") ]] \
    && echo "false" \
    || echo "true"
}

is_uuid_connected() {
  local drive_uuid="$1"

  [[ -b /dev/disk/by-partuuid/$drive_uuid ]] \
    && echo "true" \
    || echo "false"
}

should_mount() {
  local drive_uuid="$1"
  local mount_location="$2"
  local slot_num="$3"

  local args_are_empty=`has_empty_args "$drive_uuid" "$mount_location" "$slot_num"`
  
  local mount_location_is_empty=`is_mount_location_empty "$mount_location"`

  local uuid_is_connected=`is_uuid_connected "$drive_uuid"`


  [[ "$args_are_empty" == "false" && "$mount_location_is_empty" == "true" && "$uuid_is_connected" == "true" ]] \
    && echo "true" \
    || echo "false"
}

mount_drive() {
  local drive_uuid="$1"
  local mount_location="$2"
  local slot_num="$3"

  veracrypt --mount "/dev/disk/by-partuuid/$drive_uuid" "$mount_location" --slot="$slot_num"
}

main() {
  local drive_uuid="$1"
  local mount_location="$2"
  local slot_num="$3"
  
  local should_mount_drive=`should_mount "$drive_uuid" "$mount_location" "$slot_num"`
  
  if [[ "$should_mount_drive" == "true" ]]; then
    mount_drive "$drive_uuid" "$mount_location" "$slot_num"
  else
    echo "ERROR: Please ensure all args are supplied, the device is not already mounted, and the mount location exists"
    exit 1
  fi
}

main "$@"

