#!/bin/bash

#----------------
# Name          : boot_tasks
# Description   : Run boot-time tasks depending on the executing machine
# Author        : E Fournier
# Dependencies  : pkexec, dmidecode, kodi
# Example Usage : ./boot laptop
#----------------

alias_dir="$HOME/.zsh/alias"
shopt -s expand_aliases
source "$HOME/.zsh/env/env.zsh"
source "$alias_dir/drives.zsh"

delay_to_prevent_ui_bugs() {
  local delay_time=0.5

  sleep "$delay_time"
}

start_unison_snc() {
  local watch_script="$HSCRIPTS/watch_for_change"

  [[ -z `pgrep inotifywait` && -f "$watch_script" ]] \
    && nohup "$watch_script" "$SNC" "$ZSCRIPTS/uni" >/dev/null 2>&1&
}

run_laptop_tasks() {
  local touchscreen_id="SYNA2393:00 06CB:19AC"

  setxkbmap -option caps:escape
  xinput disable "$touchscreen_id"
  start_unison_snc
  m_bnk
  gnome-terminal --window --maximize
}

run_mac_media_tasks() {
  setxkbmap -option caps:escape
  m_md
  gnome-terminal --window --maximize &
  kodi -fs &
}

run_rpi_media_tasks() {
  $HOME/scripts/connect_vpn_persistently "Calypso" 60 &
  $HOME/scripts/connect_vnc_persistently 60 &
  $HOME/scripts/pulseaudio_set_default_sink "alsa.name" "HDMI" &
  setxkbmap -option caps:escape
  pacmd set-default-sink alsa_output.platform-bcm2835_audio.stereo-fallback
  m_md
  kodi -fs &
  gnome-terminal --window --maximize &
}

is_valid_machine_type() {
  local machine_type="$1"

  [[ "$machine_type" != "laptop" \
    && "$machine_type" != "mac_media" \
    && "$machine_type" != "rpi_media" \
  ]] \
    && echo "false" \
    || echo "true"
}

validate_machine_type() {
  local machine_type="$1"

  local machine_is_valid=`is_valid_machine_type "$machine_type"`
  if [[ "$machine_is_valid" == "false" ]]; then
    echo "ERROR: Must supply valid a valid machine type" >&2
    exit 1
  fi
}

main() {
  local machine_type="$1"

  validate_machine_type "$machine_type"

  delay_to_prevent_ui_bugs
  
  if [[ "$machine_type" == "laptop" ]]; then
    run_laptop_tasks
  elif [[ "$machine_type" == "mac_media" ]]; then
    run_mac_media_tasks
  elif [[ "$machine_type" == "rpi_media" ]]; then
    run_rpi_media_tasks
  fi
}

main "$@"

